{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":114463,"databundleVersionId":13660294,"sourceType":"competition"}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:24:59.926259Z","iopub.execute_input":"2025-09-24T11:24:59.926538Z","iopub.status.idle":"2025-09-24T11:24:59.933604Z","shell.execute_reply.started":"2025-09-24T11:24:59.926523Z","shell.execute_reply":"2025-09-24T11:24:59.932940Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/predicting-the-price-of-diamond/submission.csv\n/kaggle/input/predicting-the-price-of-diamond/train.csv\n/kaggle/input/predicting-the-price-of-diamond/test.csv\n","output_type":"stream"}],"execution_count":58},{"cell_type":"code","source":"sub = pd.read_csv(\"/kaggle/input/predicting-the-price-of-diamond/submission.csv\")\ntrain = pd.read_csv(\"/kaggle/input/predicting-the-price-of-diamond/train.csv\")\ntest = pd.read_csv(\"/kaggle/input/predicting-the-price-of-diamond/test.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:24:59.934769Z","iopub.execute_input":"2025-09-24T11:24:59.935003Z","iopub.status.idle":"2025-09-24T11:24:59.986423Z","shell.execute_reply.started":"2025-09-24T11:24:59.934988Z","shell.execute_reply":"2025-09-24T11:24:59.985822Z"}},"outputs":[],"execution_count":59},{"cell_type":"code","source":"sub.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:24:59.987364Z","iopub.execute_input":"2025-09-24T11:24:59.987529Z","iopub.status.idle":"2025-09-24T11:24:59.993719Z","shell.execute_reply.started":"2025-09-24T11:24:59.987516Z","shell.execute_reply":"2025-09-24T11:24:59.993032Z"}},"outputs":[{"execution_count":60,"output_type":"execute_result","data":{"text/plain":"      id  price\n0  20000  10000\n1  20001  10000\n2  20002  10000\n3  20003  10000\n4  20004  10000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>20000</td>\n      <td>10000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>20001</td>\n      <td>10000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>20002</td>\n      <td>10000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>20003</td>\n      <td>10000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>20004</td>\n      <td>10000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":60},{"cell_type":"code","source":"train.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:24:59.995123Z","iopub.execute_input":"2025-09-24T11:24:59.995349Z","iopub.status.idle":"2025-09-24T11:25:00.015319Z","shell.execute_reply.started":"2025-09-24T11:24:59.995330Z","shell.execute_reply":"2025-09-24T11:25:00.014560Z"}},"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"   id  carat        cut color clarity  depth  table     x     y     z   price\n0   0   0.31      Ideal     H     VS2   61.8   57.0  4.39  4.36  2.68   681.0\n1   1   0.38      Ideal     G    VVS1   60.8   56.0  4.67  4.73  2.89  1132.0\n2   2   0.38  Very Good     G     SI1   61.0   56.0  4.68  4.64  2.81  1307.0\n3   3   0.71    Premium     H     SI1   60.6   58.0  5.83  5.80  3.49  1308.0\n4   4   0.31  Very Good     G      IF   62.0   57.0  4.32  4.36  2.70   645.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>carat</th>\n      <th>cut</th>\n      <th>color</th>\n      <th>clarity</th>\n      <th>depth</th>\n      <th>table</th>\n      <th>x</th>\n      <th>y</th>\n      <th>z</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0.31</td>\n      <td>Ideal</td>\n      <td>H</td>\n      <td>VS2</td>\n      <td>61.8</td>\n      <td>57.0</td>\n      <td>4.39</td>\n      <td>4.36</td>\n      <td>2.68</td>\n      <td>681.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0.38</td>\n      <td>Ideal</td>\n      <td>G</td>\n      <td>VVS1</td>\n      <td>60.8</td>\n      <td>56.0</td>\n      <td>4.67</td>\n      <td>4.73</td>\n      <td>2.89</td>\n      <td>1132.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0.38</td>\n      <td>Very Good</td>\n      <td>G</td>\n      <td>SI1</td>\n      <td>61.0</td>\n      <td>56.0</td>\n      <td>4.68</td>\n      <td>4.64</td>\n      <td>2.81</td>\n      <td>1307.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0.71</td>\n      <td>Premium</td>\n      <td>H</td>\n      <td>SI1</td>\n      <td>60.6</td>\n      <td>58.0</td>\n      <td>5.83</td>\n      <td>5.80</td>\n      <td>3.49</td>\n      <td>1308.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>0.31</td>\n      <td>Very Good</td>\n      <td>G</td>\n      <td>IF</td>\n      <td>62.0</td>\n      <td>57.0</td>\n      <td>4.32</td>\n      <td>4.36</td>\n      <td>2.70</td>\n      <td>645.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":61},{"cell_type":"code","source":"test.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.016018Z","iopub.execute_input":"2025-09-24T11:25:00.016216Z","iopub.status.idle":"2025-09-24T11:25:00.033834Z","shell.execute_reply.started":"2025-09-24T11:25:00.016200Z","shell.execute_reply":"2025-09-24T11:25:00.033167Z"}},"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"      id  carat        cut color clarity  depth  table     x     y     z\n0  20000   0.51  Very Good     E     VS1   62.8   57.0  5.06  5.07  3.16\n1  20001   0.90  Very Good     D     VS2   63.6   61.0  6.04  6.01  3.86\n2  20002   0.33      Ideal     D     VS2   62.3   55.0  4.42  4.46  2.75\n3  20003   0.32  Very Good     F     VS1   63.4   56.0  4.42  4.45  2.78\n4  20004   0.30      Ideal     I     SI1   63.0   55.0  4.33  4.30  2.70","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>carat</th>\n      <th>cut</th>\n      <th>color</th>\n      <th>clarity</th>\n      <th>depth</th>\n      <th>table</th>\n      <th>x</th>\n      <th>y</th>\n      <th>z</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>20000</td>\n      <td>0.51</td>\n      <td>Very Good</td>\n      <td>E</td>\n      <td>VS1</td>\n      <td>62.8</td>\n      <td>57.0</td>\n      <td>5.06</td>\n      <td>5.07</td>\n      <td>3.16</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>20001</td>\n      <td>0.90</td>\n      <td>Very Good</td>\n      <td>D</td>\n      <td>VS2</td>\n      <td>63.6</td>\n      <td>61.0</td>\n      <td>6.04</td>\n      <td>6.01</td>\n      <td>3.86</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>20002</td>\n      <td>0.33</td>\n      <td>Ideal</td>\n      <td>D</td>\n      <td>VS2</td>\n      <td>62.3</td>\n      <td>55.0</td>\n      <td>4.42</td>\n      <td>4.46</td>\n      <td>2.75</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>20003</td>\n      <td>0.32</td>\n      <td>Very Good</td>\n      <td>F</td>\n      <td>VS1</td>\n      <td>63.4</td>\n      <td>56.0</td>\n      <td>4.42</td>\n      <td>4.45</td>\n      <td>2.78</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>20004</td>\n      <td>0.30</td>\n      <td>Ideal</td>\n      <td>I</td>\n      <td>SI1</td>\n      <td>63.0</td>\n      <td>55.0</td>\n      <td>4.33</td>\n      <td>4.30</td>\n      <td>2.70</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":62},{"cell_type":"code","source":"test.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.034504Z","iopub.execute_input":"2025-09-24T11:25:00.034718Z","iopub.status.idle":"2025-09-24T11:25:00.057872Z","shell.execute_reply.started":"2025-09-24T11:25:00.034679Z","shell.execute_reply":"2025-09-24T11:25:00.056742Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 30000 entries, 0 to 29999\nData columns (total 10 columns):\n #   Column   Non-Null Count  Dtype  \n---  ------   --------------  -----  \n 0   id       30000 non-null  int64  \n 1   carat    30000 non-null  float64\n 2   cut      30000 non-null  object \n 3   color    30000 non-null  object \n 4   clarity  30000 non-null  object \n 5   depth    30000 non-null  float64\n 6   table    30000 non-null  float64\n 7   x        30000 non-null  float64\n 8   y        30000 non-null  float64\n 9   z        30000 non-null  float64\ndtypes: float64(6), int64(1), object(3)\nmemory usage: 2.3+ MB\n","output_type":"stream"}],"execution_count":63},{"cell_type":"code","source":"train.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.058652Z","iopub.execute_input":"2025-09-24T11:25:00.058886Z","iopub.status.idle":"2025-09-24T11:25:00.077768Z","shell.execute_reply.started":"2025-09-24T11:25:00.058872Z","shell.execute_reply":"2025-09-24T11:25:00.076605Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 20000 entries, 0 to 19999\nData columns (total 11 columns):\n #   Column   Non-Null Count  Dtype  \n---  ------   --------------  -----  \n 0   id       20000 non-null  int64  \n 1   carat    20000 non-null  float64\n 2   cut      20000 non-null  object \n 3   color    20000 non-null  object \n 4   clarity  20000 non-null  object \n 5   depth    20000 non-null  float64\n 6   table    20000 non-null  float64\n 7   x        20000 non-null  float64\n 8   y        20000 non-null  float64\n 9   z        20000 non-null  float64\n 10  price    20000 non-null  float64\ndtypes: float64(7), int64(1), object(3)\nmemory usage: 1.7+ MB\n","output_type":"stream"}],"execution_count":64},{"cell_type":"code","source":"train.drop_duplicates()\ntrain.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.078825Z","iopub.execute_input":"2025-09-24T11:25:00.079050Z","iopub.status.idle":"2025-09-24T11:25:00.102478Z","shell.execute_reply.started":"2025-09-24T11:25:00.079034Z","shell.execute_reply":"2025-09-24T11:25:00.101772Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 20000 entries, 0 to 19999\nData columns (total 11 columns):\n #   Column   Non-Null Count  Dtype  \n---  ------   --------------  -----  \n 0   id       20000 non-null  int64  \n 1   carat    20000 non-null  float64\n 2   cut      20000 non-null  object \n 3   color    20000 non-null  object \n 4   clarity  20000 non-null  object \n 5   depth    20000 non-null  float64\n 6   table    20000 non-null  float64\n 7   x        20000 non-null  float64\n 8   y        20000 non-null  float64\n 9   z        20000 non-null  float64\n 10  price    20000 non-null  float64\ndtypes: float64(7), int64(1), object(3)\nmemory usage: 1.7+ MB\n","output_type":"stream"}],"execution_count":65},{"cell_type":"code","source":"cat_cols = [col for col in train.columns if train[col].dtype == \"object\"]\ncat_cols","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.103931Z","iopub.execute_input":"2025-09-24T11:25:00.104128Z","iopub.status.idle":"2025-09-24T11:25:00.109049Z","shell.execute_reply.started":"2025-09-24T11:25:00.104113Z","shell.execute_reply":"2025-09-24T11:25:00.108344Z"}},"outputs":[{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"['cut', 'color', 'clarity']"},"metadata":{}}],"execution_count":66},{"cell_type":"code","source":"for col in cat_cols:\n    train[col] = train[col].astype(\"category\")\ntrain.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.142215Z","iopub.execute_input":"2025-09-24T11:25:00.142509Z","iopub.status.idle":"2025-09-24T11:25:00.157349Z","shell.execute_reply.started":"2025-09-24T11:25:00.142490Z","shell.execute_reply":"2025-09-24T11:25:00.156655Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 20000 entries, 0 to 19999\nData columns (total 11 columns):\n #   Column   Non-Null Count  Dtype   \n---  ------   --------------  -----   \n 0   id       20000 non-null  int64   \n 1   carat    20000 non-null  float64 \n 2   cut      20000 non-null  category\n 3   color    20000 non-null  category\n 4   clarity  20000 non-null  category\n 5   depth    20000 non-null  float64 \n 6   table    20000 non-null  float64 \n 7   x        20000 non-null  float64 \n 8   y        20000 non-null  float64 \n 9   z        20000 non-null  float64 \n 10  price    20000 non-null  float64 \ndtypes: category(3), float64(7), int64(1)\nmemory usage: 1.3 MB\n","output_type":"stream"}],"execution_count":67},{"cell_type":"code","source":"train.corr(numeric_only=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.158520Z","iopub.execute_input":"2025-09-24T11:25:00.158727Z","iopub.status.idle":"2025-09-24T11:25:00.173396Z","shell.execute_reply.started":"2025-09-24T11:25:00.158709Z","shell.execute_reply":"2025-09-24T11:25:00.172744Z"}},"outputs":[{"execution_count":68,"output_type":"execute_result","data":{"text/plain":"             id     carat     depth     table         x         y         z  \\\nid     1.000000 -0.006357  0.001541 -0.002995 -0.006345 -0.005963 -0.002339   \ncarat -0.006357  1.000000  0.000692  0.146196  0.912730  0.907475  0.967603   \ndepth  0.001541  0.000692  1.000000 -0.208619  0.005492  0.004798  0.017088   \ntable -0.002995  0.146196 -0.208619  1.000000  0.143810  0.142288  0.152706   \nx     -0.006345  0.912730  0.005492  0.143810  1.000000  0.998563  0.923435   \ny     -0.005963  0.907475  0.004798  0.142288  0.998563  1.000000  0.917969   \nz     -0.002339  0.967603  0.017088  0.152706  0.923435  0.917969  1.000000   \nprice -0.003906  0.792882 -0.015520  0.103977  0.716429  0.711988  0.762594   \n\n          price  \nid    -0.003906  \ncarat  0.792882  \ndepth -0.015520  \ntable  0.103977  \nx      0.716429  \ny      0.711988  \nz      0.762594  \nprice  1.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>carat</th>\n      <th>depth</th>\n      <th>table</th>\n      <th>x</th>\n      <th>y</th>\n      <th>z</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>id</th>\n      <td>1.000000</td>\n      <td>-0.006357</td>\n      <td>0.001541</td>\n      <td>-0.002995</td>\n      <td>-0.006345</td>\n      <td>-0.005963</td>\n      <td>-0.002339</td>\n      <td>-0.003906</td>\n    </tr>\n    <tr>\n      <th>carat</th>\n      <td>-0.006357</td>\n      <td>1.000000</td>\n      <td>0.000692</td>\n      <td>0.146196</td>\n      <td>0.912730</td>\n      <td>0.907475</td>\n      <td>0.967603</td>\n      <td>0.792882</td>\n    </tr>\n    <tr>\n      <th>depth</th>\n      <td>0.001541</td>\n      <td>0.000692</td>\n      <td>1.000000</td>\n      <td>-0.208619</td>\n      <td>0.005492</td>\n      <td>0.004798</td>\n      <td>0.017088</td>\n      <td>-0.015520</td>\n    </tr>\n    <tr>\n      <th>table</th>\n      <td>-0.002995</td>\n      <td>0.146196</td>\n      <td>-0.208619</td>\n      <td>1.000000</td>\n      <td>0.143810</td>\n      <td>0.142288</td>\n      <td>0.152706</td>\n      <td>0.103977</td>\n    </tr>\n    <tr>\n      <th>x</th>\n      <td>-0.006345</td>\n      <td>0.912730</td>\n      <td>0.005492</td>\n      <td>0.143810</td>\n      <td>1.000000</td>\n      <td>0.998563</td>\n      <td>0.923435</td>\n      <td>0.716429</td>\n    </tr>\n    <tr>\n      <th>y</th>\n      <td>-0.005963</td>\n      <td>0.907475</td>\n      <td>0.004798</td>\n      <td>0.142288</td>\n      <td>0.998563</td>\n      <td>1.000000</td>\n      <td>0.917969</td>\n      <td>0.711988</td>\n    </tr>\n    <tr>\n      <th>z</th>\n      <td>-0.002339</td>\n      <td>0.967603</td>\n      <td>0.017088</td>\n      <td>0.152706</td>\n      <td>0.923435</td>\n      <td>0.917969</td>\n      <td>1.000000</td>\n      <td>0.762594</td>\n    </tr>\n    <tr>\n      <th>price</th>\n      <td>-0.003906</td>\n      <td>0.792882</td>\n      <td>-0.015520</td>\n      <td>0.103977</td>\n      <td>0.716429</td>\n      <td>0.711988</td>\n      <td>0.762594</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":68},{"cell_type":"code","source":"target = train[\"price\"]\ndel train[\"price\"]\ndata = train.copy()\ndata.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.174176Z","iopub.execute_input":"2025-09-24T11:25:00.174416Z","iopub.status.idle":"2025-09-24T11:25:00.188549Z","shell.execute_reply.started":"2025-09-24T11:25:00.174398Z","shell.execute_reply":"2025-09-24T11:25:00.187718Z"}},"outputs":[{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"   id  carat        cut color clarity  depth  table     x     y     z\n0   0   0.31      Ideal     H     VS2   61.8   57.0  4.39  4.36  2.68\n1   1   0.38      Ideal     G    VVS1   60.8   56.0  4.67  4.73  2.89\n2   2   0.38  Very Good     G     SI1   61.0   56.0  4.68  4.64  2.81\n3   3   0.71    Premium     H     SI1   60.6   58.0  5.83  5.80  3.49\n4   4   0.31  Very Good     G      IF   62.0   57.0  4.32  4.36  2.70","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>carat</th>\n      <th>cut</th>\n      <th>color</th>\n      <th>clarity</th>\n      <th>depth</th>\n      <th>table</th>\n      <th>x</th>\n      <th>y</th>\n      <th>z</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0.31</td>\n      <td>Ideal</td>\n      <td>H</td>\n      <td>VS2</td>\n      <td>61.8</td>\n      <td>57.0</td>\n      <td>4.39</td>\n      <td>4.36</td>\n      <td>2.68</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0.38</td>\n      <td>Ideal</td>\n      <td>G</td>\n      <td>VVS1</td>\n      <td>60.8</td>\n      <td>56.0</td>\n      <td>4.67</td>\n      <td>4.73</td>\n      <td>2.89</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0.38</td>\n      <td>Very Good</td>\n      <td>G</td>\n      <td>SI1</td>\n      <td>61.0</td>\n      <td>56.0</td>\n      <td>4.68</td>\n      <td>4.64</td>\n      <td>2.81</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0.71</td>\n      <td>Premium</td>\n      <td>H</td>\n      <td>SI1</td>\n      <td>60.6</td>\n      <td>58.0</td>\n      <td>5.83</td>\n      <td>5.80</td>\n      <td>3.49</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>0.31</td>\n      <td>Very Good</td>\n      <td>G</td>\n      <td>IF</td>\n      <td>62.0</td>\n      <td>57.0</td>\n      <td>4.32</td>\n      <td>4.36</td>\n      <td>2.70</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":69},{"cell_type":"code","source":"cat_cols = [col for col in test.columns if test[col].dtype == \"object\"]\ncat_cols","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.189332Z","iopub.execute_input":"2025-09-24T11:25:00.189513Z","iopub.status.idle":"2025-09-24T11:25:00.195524Z","shell.execute_reply.started":"2025-09-24T11:25:00.189500Z","shell.execute_reply":"2025-09-24T11:25:00.194914Z"}},"outputs":[{"execution_count":70,"output_type":"execute_result","data":{"text/plain":"['cut', 'color', 'clarity']"},"metadata":{}}],"execution_count":70},{"cell_type":"code","source":"for col in cat_cols:\n    test[col] = test[col].astype(\"category\")\ntest.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.197029Z","iopub.execute_input":"2025-09-24T11:25:00.197212Z","iopub.status.idle":"2025-09-24T11:25:00.219237Z","shell.execute_reply.started":"2025-09-24T11:25:00.197199Z","shell.execute_reply":"2025-09-24T11:25:00.218634Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 30000 entries, 0 to 29999\nData columns (total 10 columns):\n #   Column   Non-Null Count  Dtype   \n---  ------   --------------  -----   \n 0   id       30000 non-null  int64   \n 1   carat    30000 non-null  float64 \n 2   cut      30000 non-null  category\n 3   color    30000 non-null  category\n 4   clarity  30000 non-null  category\n 5   depth    30000 non-null  float64 \n 6   table    30000 non-null  float64 \n 7   x        30000 non-null  float64 \n 8   y        30000 non-null  float64 \n 9   z        30000 non-null  float64 \ndtypes: category(3), float64(6), int64(1)\nmemory usage: 1.7 MB\n","output_type":"stream"}],"execution_count":71},{"cell_type":"code","source":"n_train = len(data)\n\nfull = pd.concat([data, test], axis=0)\nfull_dum = pd.get_dummies(full, drop_first=True, dtype=int)\n\ndata = full_dum.iloc[:n_train].copy()\ntest  = full_dum.iloc[n_train:].copy()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.219816Z","iopub.execute_input":"2025-09-24T11:25:00.219979Z","iopub.status.idle":"2025-09-24T11:25:00.247730Z","shell.execute_reply.started":"2025-09-24T11:25:00.219963Z","shell.execute_reply":"2025-09-24T11:25:00.247060Z"}},"outputs":[],"execution_count":72},{"cell_type":"markdown","source":"## **Model 1**","metadata":{}},{"cell_type":"code","source":"from sklearn.linear_model import LinearRegression\n\nregressor = LinearRegression()\nregressor.fit(data, target)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.248666Z","iopub.execute_input":"2025-09-24T11:25:00.248848Z","iopub.status.idle":"2025-09-24T11:25:00.282221Z","shell.execute_reply.started":"2025-09-24T11:25:00.248836Z","shell.execute_reply":"2025-09-24T11:25:00.281590Z"}},"outputs":[{"execution_count":73,"output_type":"execute_result","data":{"text/plain":"LinearRegression()","text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":73},{"cell_type":"markdown","source":"## **Model 2**\n","metadata":{}},{"cell_type":"code","source":"from xgboost import XGBRegressor\n\nmodel = XGBRegressor(\n    n_estimators=1000,     \n    learning_rate=0.05,   \n    max_depth=4,          \n    random_state=42\n)\n\nmodel.fit(data, target)         \n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:00.283072Z","iopub.execute_input":"2025-09-24T11:25:00.283334Z","iopub.status.idle":"2025-09-24T11:25:01.280258Z","shell.execute_reply.started":"2025-09-24T11:25:00.283318Z","shell.execute_reply":"2025-09-24T11:25:01.279303Z"}},"outputs":[{"execution_count":74,"output_type":"execute_result","data":{"text/plain":"XGBRegressor(base_score=None, booster=None, callbacks=None,\n             colsample_bylevel=None, colsample_bynode=None,\n             colsample_bytree=None, device=None, early_stopping_rounds=None,\n             enable_categorical=False, eval_metric=None, feature_types=None,\n             gamma=None, grow_policy=None, importance_type=None,\n             interaction_constraints=None, learning_rate=0.05, max_bin=None,\n             max_cat_threshold=None, max_cat_to_onehot=None,\n             max_delta_step=None, max_depth=4, max_leaves=None,\n             min_child_weight=None, missing=nan, monotone_constraints=None,\n             multi_strategy=None, n_estimators=1000, n_jobs=None,\n             num_parallel_tree=None, random_state=42, ...)","text/html":"<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n             colsample_bylevel=None, colsample_bynode=None,\n             colsample_bytree=None, device=None, early_stopping_rounds=None,\n             enable_categorical=False, eval_metric=None, feature_types=None,\n             gamma=None, grow_policy=None, importance_type=None,\n             interaction_constraints=None, learning_rate=0.05, max_bin=None,\n             max_cat_threshold=None, max_cat_to_onehot=None,\n             max_delta_step=None, max_depth=4, max_leaves=None,\n             min_child_weight=None, missing=nan, monotone_constraints=None,\n             multi_strategy=None, n_estimators=1000, n_jobs=None,\n             num_parallel_tree=None, random_state=42, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBRegressor</label><div class=\"sk-toggleable__content\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n             colsample_bylevel=None, colsample_bynode=None,\n             colsample_bytree=None, device=None, early_stopping_rounds=None,\n             enable_categorical=False, eval_metric=None, feature_types=None,\n             gamma=None, grow_policy=None, importance_type=None,\n             interaction_constraints=None, learning_rate=0.05, max_bin=None,\n             max_cat_threshold=None, max_cat_to_onehot=None,\n             max_delta_step=None, max_depth=4, max_leaves=None,\n             min_child_weight=None, missing=nan, monotone_constraints=None,\n             multi_strategy=None, n_estimators=1000, n_jobs=None,\n             num_parallel_tree=None, random_state=42, ...)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":74},{"cell_type":"markdown","source":"## **Model 3**","metadata":{}},{"cell_type":"code","source":"from lightgbm import LGBMRegressor\n\nlgbm = LGBMRegressor(\n    n_estimators=2000,\n    learning_rate=0.01,\n    num_leaves=15,\n    max_depth=15,          \n    subsample=0.8,         \n    colsample_bytree=0.7,  \n    reg_lambda=1.0,\n    random_state=42\n    \n)\n\nlgbm.fit(data, target)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:01.281000Z","iopub.execute_input":"2025-09-24T11:25:01.281220Z","iopub.status.idle":"2025-09-24T11:25:07.142926Z","shell.execute_reply.started":"2025-09-24T11:25:01.281201Z","shell.execute_reply":"2025-09-24T11:25:07.142281Z"}},"outputs":[{"name":"stdout","text":"[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines\n[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002333 seconds.\nYou can set `force_col_wise=true` to remove the overhead.\n[LightGBM] [Info] Total Bins 1351\n[LightGBM] [Info] Number of data points in the train set: 20000, number of used features: 26\n[LightGBM] [Info] Start training from score 3953.504850\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","output_type":"stream"},{"execution_count":75,"output_type":"execute_result","data":{"text/plain":"LGBMRegressor(colsample_bytree=0.7, learning_rate=0.01, max_depth=6,\n              n_estimators=2000, num_leaves=15, random_state=42, reg_lambda=1.0,\n              subsample=0.8)","text/html":"<style>#sk-container-id-6 {color: black;background-color: white;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LGBMRegressor(colsample_bytree=0.7, learning_rate=0.01, max_depth=6,\n              n_estimators=2000, num_leaves=15, random_state=42, reg_lambda=1.0,\n              subsample=0.8)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LGBMRegressor</label><div class=\"sk-toggleable__content\"><pre>LGBMRegressor(colsample_bytree=0.7, learning_rate=0.01, max_depth=6,\n              n_estimators=2000, num_leaves=15, random_state=42, reg_lambda=1.0,\n              subsample=0.8)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":75},{"cell_type":"code","source":"preds  = lgbm.predict(test)\n\nassert len(preds) == 30000\nsub = sub[['id']].copy()\nsub['price'] = preds\nsub.to_csv('submission.csv', index=False)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:07.143529Z","iopub.execute_input":"2025-09-24T11:25:07.143979Z","iopub.status.idle":"2025-09-24T11:25:08.777450Z","shell.execute_reply.started":"2025-09-24T11:25:07.143965Z","shell.execute_reply":"2025-09-24T11:25:08.776589Z"}},"outputs":[],"execution_count":76},{"cell_type":"code","source":"assert test.shape[0] == 30000","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-24T11:25:08.778389Z","iopub.execute_input":"2025-09-24T11:25:08.778640Z","iopub.status.idle":"2025-09-24T11:25:08.782835Z","shell.execute_reply.started":"2025-09-24T11:25:08.778620Z","shell.execute_reply":"2025-09-24T11:25:08.781738Z"}},"outputs":[],"execution_count":77}]}